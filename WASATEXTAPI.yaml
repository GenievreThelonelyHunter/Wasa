openapi: 3.0.3
info:
  title: WasaText Pre-Alpha
  description: |
    Connect with your friends effortlessly using WASAText! Send and receive messages, whether one-on-one
    or in groups, all from the convenience of your PC. Enjoy seamless conversations with text, emojis, or GIFs.
  version: "0.1"

servers:
  - url: https://127.0.0.1:3000

components:
  parameters:
    sourceChatId:
      name: sourceChatId
      in: path
      required: true
      schema:
        type: string
        example: "sourceChat123"
      description: "Unique identifier of the source chat"

    targetChatId:
      name: targetChatId
      in: path
      required: true
      schema:
        type: string
        example: "targetChat456"
      description: "Unique identifier of the target chat"

    commentId:
      name: commentId
      in: path
      required: true
      schema:
        type: string
        example: "comment789"
      description: "Unique identifier of the comment to be removed"

    isGroupChat:
      name: isGroupChat
      in: query
      required: true
      schema:
        type: boolean
      description: "Indicates if the chat is a group chat"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth: []

paths:
  ### LOGIN SECTION ###
  /session:
    post:
      tags: ["login"]
      summary: "Logs in the user"
      description: >-
        If the user does not exist, it will be created, and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: "User details"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Maria"
                  minLength: 3
                  maxLength: 16
      responses:
        '201':
          description: "User successfully logged in or created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "abcdef012345"
        '400':
          description: "Invalid input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid name format. Name must be between 3 and 16 characters."
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."

  /session/setusername:
    post:
      tags: ["login"]
      summary: "Set the username"
      description: >-
        Users can set up their username, or a default will be generated.
      operationId: setMyUserName
      requestBody:
        description: "Set your username"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ".JohnDoe_24-$"
                  pattern: "^[a-zA-Z0-9._]+$"
                  minLength: 3
                  maxLength: 32
      responses:
        '201':
          description: "Username successfully set"
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: ".JohnDoe_24-$"
        '400':
          description: "Invalid username format"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Username contains invalid characters or does not meet length requirements."
        '409':
          description: "Username already exists"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "The username is already taken. Please choose another."
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."
  ### CHATS SECTION ###
  /session/chats:
    get:
      tags: ["chats"]
      summary: "Retrieve user conversations"
      operationId: getMyConversations
      responses:
        "200":
          description: "Conversations retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversations:
                    type: array
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                          description: "Unique conversation ID"
                        name:
                          type: string
                          description: "Chat or group name"
                        participants:
                          type: array
                          items:
                            type: object
                            properties:
                              userId:
                                type: string
                              username:
                                type: string
                        lastMessage:
                          type: string
                        lastMessageTimestamp:
                          type: string
                          format: date-time
                        isGroupChat:
                          type: boolean
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."
  /session/chats/{sourceChatId}:
    get:
      tags: ["chats"]
      summary: "Retrieve specific chat details"
      operationId: getConversation
      parameters:
        - $ref: '#/components/parameters/sourceChatId'
      responses:
        "200":
          description: "Chat details retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                  name:
                    type: string
                  participants:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                        username:
                          type: string
                  lastMessage:
                    type: string
                  lastMessageTimestamp:
                    type: string
                    format: date-time
                  isGroupChat:
                    type: boolean
        "404":
          description: "Chat not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chat not found"      
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."

  /session/chats/{sourceChatId}/messages:
    post:
      tags: ["chats"]
      summary: "Send a message in a chat"
      operationId: sendMessage
      parameters:
        - $ref: '#/components/parameters/sourceChatId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                content:
                  anyOf:
                    - type: string
                      format: "emoji"
                      pattern: "?:[\\u{1F600}-\\u{1F64F}]|\\u{1F300}-\\u{1F5FF})+"
                    - type: string
                      description: "Text message"
                    - type: string
                      format: uri
                      description: "Image/GIF URL"
                timestamp:
                  type: string
                  format: date-time
      responses:
        "201":
          description: "Message sent successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string
        "400":
          description: "Invalid input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid content format"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."
  /session/chats/{sourceChatId}/add-to-group:
    post:
      tags: ["chats"]
      summary: "Add user to group chat"
      operationId: addToGroupChat
      parameters:
        - $ref: '#/components/parameters/sourceChatId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                role:
                  type: string
                  enum: ["member", "admin"]
      responses:
        "201":
          description: "User added to group successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "User added to group successfully"
        "400":
          description: "Invalid input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid role specified"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."

  /session/chats/{sourceChatId}/comment:
    post:
      tags: ["chats"]
      summary: "Comment on a specific message within the same chat"
      operationId: commentMessage
      parameters:
        - $ref: "#/components/parameters/sourceChatId"
      requestBody:
        description: "Message content and the comment to post"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: "Unique identifier of the sender"
                  example: "user123"
                content:
                  type: string
                  description: "Message content"
                  example: "Hello everyone!"
                  minLength: 1
      responses:
        "201":
          description: "Message successfully commented"
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string
                    description: "Unique identifier of the commented message"
                    example: "msg789"
                  status:
                    type: string
                    example: "Sent"
        "404":
          description: "Message not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Message not found"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."

  /session/chats/{sourceChatId}/uncomment:
    delete:
      tags: ["chats"]
      summary: "Remove a specific comment from a message within the same chat"
      operationId: deleteComment
      parameters:
        - $ref: "#/components/parameters/sourceChatId"
        - $ref: "#/components/parameters/commentId"
      responses:
        "204":
          description: "Comment successfully deleted"
        "404":
          description: "Comment not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Comment not found"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."
  /session/chats/{sourceChatId}/leave-group:
    delete:
      tags: ["chats"]
      summary: "Leave a group chat"
      operationId: leaveGroupChat
      parameters:
        - $ref: '#/components/parameters/sourceChatId'
      responses:
        "204":
          description: "Left group successfully"
        "404":
          description: "Group not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Group not found"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."
  /session/chats/{sourceChatId}/Grouphoto:
    post:
      tags: ["chats"]
      summary: "Change the group photo"
      operationId: setGroupPhoto
      parameters:
        - $ref: '#/components/parameters/sourceChatId'
        - $ref: '#/components/parameters/isGroupChat'
      requestBody:
        required: true
        content:
          multipart/form-data: 
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
                  description: "The new group photo to be uploaded"
                description:
                  type: string
                  example: "This is our updated group photo."
      responses:
        "200":
          description: "Group photo successfully updated"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Group photo updated successfully"
                  photoUrl:
                    type: string
                    format: uri
                    example: "https://example.com/images/group-photo.jpg"
        "400":
          description: "Invalid file format"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid file format. Only JPEG and PNG are allowed."
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."
  /session/chats/{sourceChatId}/Groupname:
    post:
      tags: ["chats"]
      summary: "Change the group name"
      operationId: setGroupName
      parameters:
        - $ref: '#/components/parameters/sourceChatId'
        - $ref: '#/components/parameters/isGroupChat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: "New group name"
      responses:
        "200":
          description: "Group name successfully updated"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Group name updated successfully"
        "400":
          description: "Invalid name format"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid name format"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."

### SETTINGS SECTION ###
  /settings:
    get:
      tags: ["settings"]
      summary: "Retrieve user settings"
      operationId: getUserSettings
      responses:
        "200":
          description: "Settings retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    type: object
                    properties:
                      theme:
                        type: string
                        example: "dark"
                      notifications:
                        type: boolean
                        example: true
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to retrieve settings due to a server error."

    post:
      tags: ["settings"]
      summary: "Update user settings"
      operationId: updateUserSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: "The theme for the user interface"
                  example: "light"
                notifications:
                  type: boolean
                  description: "Whether notifications are enabled"
                  example: false
      responses:
        "200":
          description: "Settings updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Settings updated successfully"
        "400":
          description: "Invalid input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid theme value provided."
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update settings due to a server error."

  /settings/userphoto:
    post:
      tags: ["settings"]
      summary: "Update user photo"
      operationId: setMyPhoto
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
                  description: "The new user photo to be uploaded"
                description:
                  type: string
                  example: "This is my new profile photo."
                  description: "Optional description or metadata for the photo"
      responses:
        "200":
          description: "User photo updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "User photo updated successfully"
                  photoUrl:
                    type: string
                    format: uri
                    description: "URL of the updated user photo"
                    example: "https://example.com/images/user-photo.jpg"
        "400":
          description: "Invalid file format"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid file format. Only JPEG and PNG are allowed."
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unable to update the photo due to a server error."
